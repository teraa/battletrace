// <auto-generated />
using System;
using BattleTrace.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BattleTrace.Api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20221109000336_Add_DTO_Migration1")]
    partial class Add_DTO_Migration1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.10");

            modelBuilder.Entity("BattleTrace.Data.Models.Player", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT")
                        .HasColumnName("id");

                    b.Property<int>("Deaths")
                        .HasColumnType("INTEGER")
                        .HasColumnName("deaths");

                    b.Property<int>("Faction")
                        .HasColumnType("INTEGER")
                        .HasColumnName("faction");

                    b.Property<int>("Kills")
                        .HasColumnType("INTEGER")
                        .HasColumnName("kills");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("name");

                    b.Property<int>("Rank")
                        .HasColumnType("INTEGER")
                        .HasColumnName("rank");

                    b.Property<int>("Role")
                        .HasColumnType("INTEGER")
                        .HasColumnName("role");

                    b.Property<long>("Score")
                        .HasColumnType("INTEGER")
                        .HasColumnName("score");

                    b.Property<string>("ServerId")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("server_id");

                    b.Property<int>("Squad")
                        .HasColumnType("INTEGER")
                        .HasColumnName("squad");

                    b.Property<string>("Tag")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("tag");

                    b.Property<int>("Team")
                        .HasColumnType("INTEGER")
                        .HasColumnName("team");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .HasColumnType("TEXT")
                        .HasColumnName("updated_at");

                    b.Property<long>("UpdatedAt2")
                        .HasColumnType("INTEGER")
                        .HasColumnName("updated_at2");

                    b.HasKey("Id")
                        .HasName("pk_players");

                    b.ToTable("players", (string)null);
                });

            modelBuilder.Entity("BattleTrace.Data.Models.Server", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT")
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("name");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .HasColumnType("TEXT")
                        .HasColumnName("updated_at");

                    b.Property<long>("UpdatedAt2")
                        .HasColumnType("INTEGER")
                        .HasColumnName("updated_at2");

                    b.HasKey("Id")
                        .HasName("pk_servers");

                    b.ToTable("servers", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
